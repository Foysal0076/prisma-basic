generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int                @id @default(autoincrement())
  email       String             @unique
  firstName   String?
  lastName    String?
  role        UserRole           @default(STUDENT)
  social      Json?
  courses     CourseEnrollment[]
  testResults TestResult[]       @relation(name: "results")
  testsGraded TestResult[]       @relation(name: "graded")
  tokens      Token[]
}

model Token {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       TokenType
  emailToken String?
  valid      Boolean   @default(true)
  expiration DateTime
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
}

model Course {
  id            Int                @id @default(autoincrement())
  name          String
  courseDetails String?
  members       CourseEnrollment[]
  tests         Test[]
}

model CourseEnrollment {
  createdAt DateTime @default(now())
  role      UserRole
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  Course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int

  @@id([userId, courseId])
  @@index([userId, role])
}

model Test {
  id          Int          @id @default(autoincrement())
  updatedAt   DateTime     @updatedAt
  name        String
  date        DateTime
  testResults TestResult[]
  course      Course       @relation(fields: [courseId], references: [id])
  courseId    Int
}

model TestResult {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  result    Int
  test      Test     @relation(fields: [testId], references: [id])
  testId    Int
  student   User     @relation(name: "results", fields: [studentId], references: [id])
  studentId Int
  grader    User     @relation(name: "graded", fields: [graderId], references: [id])
  graderId  Int
}

enum UserRole {
  STUDENT
  TEACHER
  ADMIN
}

enum TokenType {
  EMAIL
  API
}
